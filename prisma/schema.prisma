// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ─────────────────────────────────────────────────────────────────────────────
// USER (single admin, minimal fields)
// ─────────────────────────────────────────────────────────────────────────────
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime? // Soft delete if ever needed

  // If you truly want minimal user info, you can remove name/role.
  // This is enough for a single-admin login scenario.
}

// ─────────────────────────────────────────────────────────────────────────────
// POST (One category, many tags, track published info, plus soft delete)
// ─────────────────────────────────────────────────────────────────────────────
model Post {
  id            String   @id @default(cuid())
  title         String
  description   String
  content       String     // Tiptap HTML/JSON or however you store it
  featuredImage String?    // Optional URL or file path
  views         Int        @default(0)
  slug          String     @unique
  published     Boolean    @default(false)
  publishedAt   DateTime?  // When the post is made public
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  deletedAt     DateTime?  // Soft delete

  // Relationships
  // Category: One category per post (optional if you sometimes have uncategorized posts)
  categoryId String?
  category   Category? @relation(fields: [categoryId], references: [id])

  // Tags: Many-to-many
  tags Tag[] @relation("PostTags")

  // Indices
  @@index([publishedAt])
  @@index([categoryId]) // Helps with queries filtering by category
}

// ─────────────────────────────────────────────────────────────────────────────
// CATEGORY (One-to-many relationship with posts, track slug, soft delete)
// ─────────────────────────────────────────────────────────────────────────────
model Category {
  id          String   @id @default(cuid())
  name        String
  slug        String   @unique
  description String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  // Relationship back to posts
  posts Post[]

  // Useful if you frequently query by name
  @@index([name])
}

// ─────────────────────────────────────────────────────────────────────────────
// TAG (Many-to-many relationship with posts, track slug, soft delete)
// ─────────────────────────────────────────────────────────────────────────────
model Tag {
  id        String   @id @default(cuid())
  name      String
  slug      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  // Relationship to posts
  posts Post[] @relation("PostTags")

  @@index([name])
}

// ─────────────────────────────────────────────────────────────────────────────
// MESSAGE (contact form messages, read status, archivedAt, deletedAt, etc.)
// ─────────────────────────────────────────────────────────────────────────────
model Message {
  id         String   @id @default(cuid())
  name       String
  email      String
  content    String
  createdAt  DateTime @default(now())
  read       Boolean  @default(false)
  ipAddress  String?
  archivedAt DateTime?
  deletedAt  DateTime?
}

// ─────────────────────────────────────────────────────────────────────────────
// SUBSCRIBER (tracks email subscriptions for new posts)
// ─────────────────────────────────────────────────────────────────────────────
model Subscriber {
  id             String   @id @default(cuid())
  email          String   @unique
  subscribedAt   DateTime @default(now())
  unsubscribedAt DateTime? // When non-null, indicates the user has unsubscribed

  @@index([email])
}
